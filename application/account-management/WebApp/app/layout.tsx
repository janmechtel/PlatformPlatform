import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { getThemeMode } from "@/ui/Theme/themeModeCookie";
import { Providers } from "./Providers";
import { resolveLocale } from "@/translations/resolveLocale";
import { loadCatalog } from "@/translations/loadCatalog";
import { cookies, headers } from "next/headers";
import { getLocaleDirection } from "@/translations/i18n";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface LayoutProps {
  children: React.ReactNode;
  params: Record<string, string>;
}

export default async function Root({ children }: Readonly<LayoutProps>) {
  const themeMode = getThemeMode();
  const locale = resolveLocale(cookies(), headers());
  const messages = await loadCatalog(locale);
  const themeModeClass = themeMode !== "system" ? themeMode : undefined;

  return (
      <html
        lang={locale}
        dir={getLocaleDirection(locale)}
        className={themeModeClass}
      >
        <body className={`${inter.className} overflow-hidden flex flex-col`}>
          <Providers messages={messages} locale={locale} themeMode={themeMode}>
        {children}
          </Providers>
        </body>
      </html>
  );
}
